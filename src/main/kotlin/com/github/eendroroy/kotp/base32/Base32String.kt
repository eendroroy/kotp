package com.github.eendroroy.kotp.base32

import org.apache.commons.codec.binary.Base32

/**
 * Generated by [com.github.eendroroy.kotp.base32.Base32]
 *
 * @author indrajit
 *
 * @since 0.1.2
 */
class Base32String private constructor(private val str: String) {
    /**
     * Decodes [Base32String] to [ByteArray]
     *
     * @return decoded [ByteArray]
     *
     * @since 0.1.2
     */
    fun decode(): ByteArray = Base32().decode(str.toByteArray())

    /**
     * Decodes [Base32String] to [String]
     *
     * @return decoded [String]
     *
     * @since 0.1.2
     */
    fun decodeAsString(): String = String(decode())

    /**
     * [String] representation of [Base32String]
     *
     * @return encoded [String]
     *
     * @since 0.1.2
     */
    fun raw(): String = str

    /**
     * Raw [ByteArray] of [Base32String]
     *
     * @return encoded [ByteArray]
     *
     * @since 0.1.2
     */
    fun rawBytes(): ByteArray = str.toByteArray()

    internal class Builder(private val str: String) {
        fun build(): Base32String = Base32String(str)
    }
}
